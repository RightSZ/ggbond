?plot
library(VIM)
?plot
?aggr
library(patchwork)
devtools::document()
devtools::build()
library(ggbond)
?aggrPlot
devtools::document()
devtools::build()
library(ggbond)
?aggrPlot
usethis::use_package(ggplot2,type = "Imports")
usethis::use_package("ggplot2",type = "Imports")
?person
use_gpl3_license()
usethis::use_gpl3_license()
devtools::build()
library(ggbond)
??ggbond
ggbond
devtools::install("ggbond")
??ggbond
help(package="ggbond")
?ggbond
??ggbond
help(package="ggbond")
source("~/Documents/ggbond/R/varimpPlot.R", echo=TRUE)
devtools::build()
library(ggbond)
?varimpPlot
library(ggbond)
?varimpPlot
devtools::document()
library(ggbond)
help(package="ggbond")
library(ggbond)
library(ggbond)
?varimpPlot
remove.packages("ggbond")
devtools::install_github("RightSZ/ggbond")
library(ggbond)
?varimpPlot
ceiling(30.6)
31/5
seq(0, ceiling(30.6), by = floor(ceiling(30.6)/5))
seq(0, ceiling(30.6), by = ceiling(ceiling(30.6)/5))
seq(0, ceiling(30.6), by = ceiling(ceiling(30.6)/5))
ceiling(ceiling(30.6)/5)
seq(0, ceiling(30.6), by = (ceiling(30.6)/5))
seq(0, ceiling(37.6), by = (ceiling(37.6)/5))
seq(0, ceiling(37.6), by = floor(ceiling(37.6)/5))
ceiling(37.6)/5
floor(ceiling(37.6)/5)
?seq
seq.int(0, ceiling(37.6), by = (ceiling(37.6)/5))
seq(0, ceiling(37.6), length.out=5)
seq.int(0, ceiling(37.6), length.out=5)
seq.int(from = 0,by=(ceiling(37.6)/5))
seq.int(from = 0, to=ceiling(37.6))
seq(along.with= 1)
seq(along.with= 3)
seq.int(from = 0, to=ceiling(37.6),along.with= 3)
seq.int(from = 0, to=ceiling(37.6),along.with= 100)
seq.int(from = 0, by = 5)
seq(from = 0, by = 5)
seq(from = 0, by = ceiling(37.6)/5, length.out = 5)
seq(0, ceiling(max(d$MeanDecreaseGini)), by = )
floor(ceiling(37.6)/5)
seq(from = 0, by = floor(ceiling(37.6)/5), length.out = 5)
seq(from = 0, by = floor(ceiling(37.6)/5), length.out = 6)
seq(from = 0, by = floor(floor(37.6)/5), length.out = 6)
seq(from = 0, by = ceiling(floor(37.6)/5), length.out = 6)
varimpPlot<-function(d,cutoff){
d<-as.data.frame(d)
d$Rowname<-rownames(d)
if(!missing(cutoff)){
d$color_value <- ifelse(d$MeanDecreaseGini >= cutoff, d$MeanDecreaseGini, NA)
}
p<-ggplot(d, aes(
x = MeanDecreaseGini,
y = reorder(Rowname, MeanDecreaseGini)
)) +
geom_point(aes(color = color_value)) +
geom_segment(aes(
x = 0, xend = MeanDecreaseGini,color=color_value
)) +
labs(y = NULL) +
theme_bw()+
scale_color_viridis_c(na.value = "grey50")+
theme(legend.position = "none")+
scale_x_continuous(
breaks = seq(from = 0, by = ceiling(floor(max(d$MeanDecreaseGini))/5), length.out = 6),
limits = c(0, ceiling(max(d$MeanDecreaseGini)))
)
if(!missing(cutoff)){
p<-p+geom_vline(xintercept = cutoff, color = "red",alpha=0.7, linetype = "dashed")
}
return(p)
}
?varimpPlot
set.seed(1234)
library(randomForest)
library(ggbond)
iris.rf <- randomForest(Species ~ ., data=iris,ntree=500)
optionTrees = which.min(iris.rf$err.rate[,1])
iris.rf2 = randomForest(as.factor(Species)~.,data = iris,ntree=optionTrees)
importance = importance(x=iris.rf2)
varimpPlot(importance, cutoff=3)
library(ggplot2)
library(randomForest)
library(ggbond)
iris.rf <- randomForest(Species ~ ., data=iris,ntree=500)
optionTrees = which.min(iris.rf$err.rate[,1])
iris.rf2 = randomForest(as.factor(Species)~.,data = iris,ntree=optionTrees)
importance = importance(x=iris.rf2)
varimpPlot(importance, cutoff=3)
d<-importance
d<-as.data.frame(d)
d$Rowname<-rownames(d)
if(!missing(cutoff)){
d$color_value <- ifelse(d$MeanDecreaseGini >= cutoff, d$MeanDecreaseGini, NA)
}
ceiling(floor(max(d$MeanDecreaseGini))/5)
c(0, ceiling(max(d$MeanDecreaseGini)))
View(d)
varimpPlot<-function(d,cutoff){
d<-as.data.frame(d)
d$Rowname<-rownames(d)
if(!missing(cutoff)){
d$color_value <- ifelse(d$MeanDecreaseGini >= cutoff, d$MeanDecreaseGini, NA)
}
p<-ggplot(d, aes(
x = MeanDecreaseGini,
y = reorder(Rowname, MeanDecreaseGini)
)) +
geom_point(aes(color = color_value)) +
geom_segment(aes(
x = 0, xend = MeanDecreaseGini,color=color_value
)) +
labs(y = NULL) +
theme_bw()+
scale_color_viridis_c(na.value = "grey50")+
theme(legend.position = "none")+
scale_x_continuous(
breaks = seq(from = 0, by = ceiling(floor(max(d$MeanDecreaseGini))/5), length.out = 6)
)
if(!missing(cutoff)){
p<-p+geom_vline(xintercept = cutoff, color = "red",alpha=0.7, linetype = "dashed")
}
return(p)
}
varimpPlot(importance, cutoff=3)
varimpPlot<-function(d,cutoff){
d<-as.data.frame(d)
d$Rowname<-rownames(d)
if(!missing(cutoff)){
d$color_value <- ifelse(d$MeanDecreaseGini >= cutoff, d$MeanDecreaseGini, NA)
}
p<-ggplot(d, aes(
x = MeanDecreaseGini,
y = reorder(Rowname, MeanDecreaseGini)
)) +
geom_point(aes(color = color_value)) +
geom_segment(aes(
x = 0, xend = MeanDecreaseGini,color=color_value
)) +
labs(y = NULL) +
theme_bw()+
scale_color_viridis_c(na.value = "grey50")+
theme(legend.position = "none")+
scale_x_continuous(
breaks = seq(from = 0, by = ceiling(floor(max(d$MeanDecreaseGini))/5), length.out = 6),
limits = c(0, ceiling(max(d$MeanDecreaseGini)))
)
if(!missing(cutoff)){
p<-p+geom_vline(xintercept = cutoff, color = "red",alpha=0.7, linetype = "dashed")
}
return(p)
}
varimpPlot(importance, cutoff=3)
c(0, max(seq(from = 0, by = ceiling(floor(max(d$MeanDecreaseGini))/5), length.out = 6)))
varimpPlot<-function(d,cutoff){
d<-as.data.frame(d)
d$Rowname<-rownames(d)
if(!missing(cutoff)){
d$color_value <- ifelse(d$MeanDecreaseGini >= cutoff, d$MeanDecreaseGini, NA)
}
p<-ggplot(d, aes(
x = MeanDecreaseGini,
y = reorder(Rowname, MeanDecreaseGini)
)) +
geom_point(aes(color = color_value)) +
geom_segment(aes(
x = 0, xend = MeanDecreaseGini,color=color_value
)) +
labs(y = NULL) +
theme_bw()+
scale_color_viridis_c(na.value = "grey50")+
theme(legend.position = "none")+
scale_x_continuous(
breaks = seq(from = 0, by = ceiling(floor(max(d$MeanDecreaseGini))/5), length.out = 6),
limits = c(0, max(seq(from = 0, by = ceiling(floor(max(d$MeanDecreaseGini))/5), length.out = 6)))
)
if(!missing(cutoff)){
p<-p+geom_vline(xintercept = cutoff, color = "red",alpha=0.7, linetype = "dashed")
}
return(p)
}
varimpPlot(importance, cutoff=3)
devtools::document()
devtools::document()
library(ggbond)
library(VIM)
data(sleep, package="VIM")
library(missForest)
data(sleep, package="VIM")
sleep2<-missForest(sleep)$ximp
data <- aggr(sleep2)
aggrPlot(d=data)
library(dplyr)
aggrPlot(d=data)
library(VIM)
data(sleep)
library(ggbond)
aggrPlot(aggr(sleep))
#' @importFrom stringr str_replace_all
#' @importFrom tidyr pivot_longer
#' @import ggplot2
#' @import patchwork
#' @import dplyr
#' @examples
#' \donttest{
#' aggrPlot(d, col_replace=TRUE)
#' }
#'
aggrPlot<-function(d, col_replace=TRUE){
if (col_replace) {
d[["missings"]][["Variable"]] <- str_replace_all(d[["missings"]][["Variable"]],
"_", " ")
}
h <- d[["tabcomb"]][order(d[["count"]], decreasing = T), ]
if(!is.matrix(h)) h <- matrix(h,ncol = length(h))
colnames(h) <- d[["missings"]][["Variable"]]
h <- as.data.frame(h) |>
mutate(y = rownames(.)) |>
pivot_longer(cols = -y, names_to = "x", values_to = "value")
h$x<-factor(h$x,levels=d[["missings"]][["Variable"]])
h$value<-factor(h$value)
p1 <- ggplot(h, aes(x = x, y = y, fill = value)) +
geom_tile(colour = "white") +
scale_fill_manual(values = c(`0` = "grey",
`1` = "red")) +
labs(title = "", x = "", y = "Combinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90,hjust = 1, vjust = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")+
scale_y_discrete(expand = c(0,0))
p <- data.frame(Col = d[["missings"]][["Variable"]], Proportion = d[["missings"]][["Count"]]/nrow(d[["x"]]))
p$Col <- factor(p$Col, levels = unique(p$Col))
p2 <- ggplot(p, aes(x = Col, y = Proportion)) +
geom_bar(stat = "identity", fill = "red") +
labs(title = "", x = "", y = "Proportion of missings") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90,hjust = 1, vjust = 0.5))
l <- data.frame(percent = d[["percent"]][order(d[["count"]],
decreasing = T)],
count = d[["count"]][order(d[["count"]],
decreasing = T)],
color = ifelse(stringr::str_detect(d[["combinations"]][order(d[["count"]],
decreasing = T)], "1"), "1", "0"))
l$rowname <- factor(rownames(l), levels = unique(rownames(l)))
p3 <- ggplot(l, aes(y = rowname, x = count, fill = color)) +
geom_bar(stat = "identity", colour = "black") +
scale_y_discrete(labels = paste0(round(l$percent, digits = 2), "%"), expand = c(0, 0), position = "right") +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_manual(values = c(`0` = "grey", `1` = "red")) +
theme_minimal() +
theme(axis.text.x = element_blank(),
axis.title = element_blank(), axis.line.y = element_blank(),
axis.ticks.y = element_blank(), plot.background = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = "none")
return(p2 + p1 + p3 + plot_layout(ncol = 3, widths = c(1, 1, 0.1)))
}
aggrPlot(aggr(sleep))
aggrPlot(aggr(sleep))
library(ggbond)
aggrPlot(aggr(sleep))
library(VIM)
library(ggbond)
data(sleep)
aggrPlot(aggr(sleep))
library(ggbond)
data(sleep)
aggrPlot(aggr(sleep))
